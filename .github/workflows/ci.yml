name: Main CI

on:

  push:
    branches:
      - main

# When pushing in main or merging pull request in main
#  ${{github.base_ref}} : <empty>
#  ${{github.ref_name}} : main 
# When creating pull request in dev* 
#  ${{github.base_ref}} : main 
#  ${{github.ref_name}} : 1/merge

jobs:

  test1:
    runs-on: [test,linux64]
    container: 
      image: fr-qafactorydev.europe.altair.com/common-linux64
      credentials: 
        username: ${{secrets.DOCKER_REGISTRY_USER}}
        password: ${{secrets.DOCKER_REGISTRY_PASSWD}}
      volumes: 
         - /etc/localtime:/etc/localtime:ro

    steps:

      # Get last git modifications, don't clean before (way to keep persistent obj files)
      - uses: actions/checkout@v2

      # Set the working dir suffixed with branch name
      - name: Copy large file
        run: |
          mkdir mybins
          cp photo2.jfif mybins/photo2.jfif


      # Upload artifact
      - name: Upload built artifacts
        uses: actions/upload-artifact@v2
        with:
          name: mybins
          path: mybins

  test2:
    runs-on: [test,linux64]
    container: 
      image: fr-qafactorydev.europe.altair.com/common-linux64
      credentials:  
        username: ${{secrets.DOCKER_REGISTRY_USER}}
        password: ${{secrets.DOCKER_REGISTRY_PASSWD}}
      volumes: 
         - /etc/localtime:/etc/localtime:ro

    steps:

      # Get last git modifications, don't clean before (way to keep persistent obj files)
      - uses: actions/checkout@v2

      # Set the working dir suffixed with branch name
      - name: Copy large file
        run: |
          mkdir mybins
          cp photo2.jfif mybins/photo3.jfif
          cp photo2.jfif mybins/photo4.jfif
          cp photo2.jfif mybins/photo5.jfif
          cp photo2.jfif mybins/photo6.jfif
          cp photo2.jfif mybins/photo7.jfif
          cp photo2.jfif mybins/photo8.jfif
          cp photo2.jfif mybins/photo9.jfif
          cp photo2.jfif mybins/photo10.jfif
          cp photo2.jfif mybins/photo11.jfif
          cp photo2.jfif mybins/photo12.jfif
          cp photo2.jfif mybins/photo13.jfif
          cp photo2.jfif mybins/photo14.jfif
          cp photo2.jfif mybins/photo15.jfif
          cp photo2.jfif mybins/photo16.jfif
          cp photo2.jfif mybins/photo17.jfif
          cp photo2.jfif mybins/photo18.jfif
          cp photo2.jfif mybins/photo19.jfif
          cp photo2.jfif mybins/photo20.jfif
          cp photo2.jfif mybins/photo21.jfif
          cp photo2.jfif mybins/photo22.jfif
          cp photo2.jfif mybins/photo23.jfif
          cp photo2.jfif mybins/photo24.jfif
          cp photo2.jfif mybins/photo25.jfif          
          cp photo2.jfif mybins/photo26.jfif
          cp photo2.jfif mybins/photo27.jfif
          cp photo2.jfif mybins/photo28.jfif
          cp photo2.jfif mybins/photo29.jfif
          cp photo2.jfif mybins/photo30.jfif
          cp photo2.jfif mybins/photo31.jfif
          cp photo2.jfif mybins/photo32.jfif
          cp photo2.jfif mybins/photo33.jfif          
          cp photo2.jfif mybins/photo34.jfif
          cp photo2.jfif mybins/photo35.jfif
          cp photo2.jfif mybins/photo36.jfif
          cp photo2.jfif mybins/photo37.jfif
          cp photo2.jfif mybins/photo38.jfif
          cp photo2.jfif mybins/photo39.jfif
          cp photo2.jfif mybins/photo40.jfif
          cp photo2.jfif mybins/photo41.jfif          
          cp photo2.jfif mybins/photo41.jfif
          cp photo2.jfif mybins/photo43.jfif
          cp photo2.jfif mybins/photo44.jfif
          cp photo2.jfif mybins/photo45.jfif
          cp photo2.jfif mybins/photo46.jfif
          cp photo2.jfif mybins/photo47.jfif
          cp photo2.jfif mybins/photo48.jfif
          cp photo2.jfif mybins/photo49.jfif                

      # Upload artifact
      - name: Upload built artifacts
        uses: actions/upload-artifact@v2
        with:
          name: mybins
          path: mybins

  test3:
    needs: [test1,test2]
    runs-on: [test,linux64]
    container: 
      image: fr-qafactorydev.europe.altair.com/common-linux64
      credentials: 
        username: ${{secrets.DOCKER_REGISTRY_USER}}
        password: ${{secrets.DOCKER_REGISTRY_PASSWD}}
      volumes: 
         - /etc/localtime:/etc/localtime:ro

    steps:

      # Get last git modifications, don't clean before (way to keep persistent obj files)
      - uses: actions/checkout@v2

      # Set the working dir suffixed with branch name
      - name: Check
        run: |
          ls -l

      # Download artifact
      - uses: actions/download-artifact@v2
        with:
          name: mybins
          path: mybinsdownloaded   

      # Set the working dir suffixed with branch name
      - name: Check
        run: |
          ls -l mybinsdownloaded/        